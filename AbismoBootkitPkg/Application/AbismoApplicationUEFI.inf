# .INF File
# https://github.com/tianocore/tianocore.github.io/wiki/Build-Description-Files#the-inf-file
# This file describes how to build a module (i.e. a driver, library, application, etc…).

# UEFI Application


[Defines]
  INF_VERSION                    = 1.25 # Defines the version of the EDK II INF specification the INF file supports.
  BASE_NAME                      = AbismoApplicationUEFI # Defines the base output name of the module (application, library, etc...) when built resulting in the final .efi or .lib binary.
  FILE_GUID                      = 2a9a2a2d-6100-45c4-9fd0-ba26ed3500e2 # A unique GUID for this module. See http://www.guidgen.com/
  MODULE_TYPE                    = UEFI_APPLICATION # The type of module being built. This includes things such as UEFI_DRIVER, UEFI_APPLICATION, DXE_DRIVER, etc… For libraries it can be BASE, USER_DEFINED, etc…
  VERSION_STRING                 = 1.0 # The developer defined version of your module, Major "." Minor number.
  ENTRY_POINT                    = UefiMain # If your module is not a library, this variable defines the function to begin execution. This is similar to the main() function in C.


# List the various packages the module will use. This tells the build system where to look for library classes (header files for the library), PCDs, GUIDs, Protocols, and PPIs via the different packages .DEC files. The .DCS file from this package is not used. Typically minimum required package is the MdePkg.dec
[Packages]
  AbismoBootkitPkg/AbismoBootkitPkg.dec # Main package for the Abismo Bootkit project
  MdePkg/MdePkg.dec # The Module Development Environment Package (MdePkg) is a special package as it is the minimum infrastructure required to build a module
  MdeModulePkg/MdeModulePkg.dec # This package provides the modules that conform to UEFI/PI Industry standards. It also provides the defintions(including PPIs/PROTOCOLs/GUIDs and library classes) and libraries instances, which are used for those modules.


# List the various source and header files used to build the module.
[Sources]
  AbismoApplicationUEFI.c # Main
  Functions/FunctionsScreen.c # Screen
  Functions/FunctionsEfiSystemPartition.c # Efi System Partition
  Functions/FunctionsBoot.c # Boot


# List the various libraries the module uses and should be linked with. This is the LibNameToReference value the library module used in its .INF file. For each entry in this section there needs to be an entry [LibraryClasses] sector of the .DSC file this module is associated with. This is because the packages in the [Packages] section are not used to determine the library module to link with.
[LibraryClasses]
  # Entry Point
  UefiApplicationEntryPoint
    # Module entry point library for UEFI Applications.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiApplicationEntryPoint.h
  # Tables
  UefiBootServicesTableLib
    # Provides a service to retrieve a pointer to the EFI Boot Services Table. Only available to DXE and UEFI module types.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiBootServicesTableLib.h
  UefiRuntimeServicesTableLib
    # Provides a service to retrieve a pointer to the EFI Runtime Services Table.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiRuntimeServicesTableLib.h
  # Base
  UefiLib
    # Provides library functions for common UEFI operations. Only available to DXE and UEFI module types.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiLib.h
  # Files
  DevicePathLib
    # Provides library functions to construct and parse UEFI Device Paths.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/DevicePathLib.h
  FileHandleLib
    # Provides interface to EFI_FILE_HANDLE functionality.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/FileHandleLib.h


# List the various protocol GUIDs variable name needed/used by the sources. The variable name is defined in one of the [Packages].DEC [Guids] section. Also listed are the Usage Block definitions for the protocol for this module.
[Protocols]
  gEfiLoadedImageProtocolGuid             ## CONSUMES
  gEfiSimpleFileSystemProtocolGuid        ## CONSUMES


# List the various GUIDs variable name needed/used by the sources. The variable name is defined in one of the [Packages].DEC [Guids] section. The usage block SOMETIMES_PRODUCES and guide type UNDEFINED Means that the module will produce a GUID that does not fit into the defined PROTOCOL or PPI types. This module conditionally produces the named GUID.
[Guids]
  gEfiGlobalVariableGuid ## SOMETIMES_PRODUCES
